<?php

/**
 * @file
 * Contains advancedqueue_runner.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function advancedqueue_runner_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the advancedqueue_runner module.
    case 'help.page.advancedqueue_runner':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module assist Advanced queue module for running in the background without activate cronjob or run command') . '</p>';
      return $output;
    default:
  }
}

/**
 * Implements hook_theme().
 */
function advancedqueue_runner_theme() {
  return [
    'advancedqueue_runner' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_install().
 */
function advancedqueue_runner_install() {
  // to resolve https://github.com/digitalutsc/advanced-queue-runner/issues/2
  if (empty(getenv('HOME'))) {
    if (!empty(posix_getpwuid(posix_getuid()))) {
      putenv("HOME=".posix_getpwuid(posix_getuid())['dir']);
    }
  }
}

/**
 * Debug function: display any variable to error log
 *
 * @param $thing
 */
if (!function_exists('print_log')) {
  function print_log($thing)
  {
    error_log(print_r($thing, true), 0);
  }

}
/**
 * Debug function: display any variable to current webpage
 * @param $thing
 */
if (!function_exists('logging')) {
  function logging($thing)
  {
    echo "<pre>";
    print_r($thing);
    echo "</pre>";
  }
}

/**
 * Debug function: display any variable to drupal Reports Log messages
 *
 */
if (!function_exists('drupal_log')) {
    function drupal_log($msg, $type="error")
    {
        switch($type) {
            case "notice" : {
                \Drupal::logger(basename(__FILE__, '.module'))->notice($msg);
                break;
            }
            case "log" : {
                \Drupal::logger(basename(__FILE__, '.module'))->log(\Drupal\Core\Logger\RfcLogLevel::NOTICE, $msg);
                break;
            }
            case "warning" : {
                \Drupal::logger(basename(__FILE__, '.module'))->warning($msg);
                break;
            }
            case "alert" : {
                \Drupal::logger(basename(__FILE__, '.module'))->alert($msg);
                break;
            }
            case "critical" : {
                \Drupal::logger(basename(__FILE__, '.module'))->critical($msg);
                break;
            }
            case "debug" : {
                \Drupal::logger(basename(__FILE__, '.module'))->debug($msg);
                break;
            }
            case "info" : {
                \Drupal::logger(basename(__FILE__, '.module'))->info($msg);
                break;
            }
            case "emergency" : {
                \Drupal::logger(basename(__FILE__, '.module'))->emergency($msg);
                break;
            }
            default: {
                \Drupal::logger(basename(__FILE__, '.module'))->error($msg);
                break;
            }
        }
    }
}



